{"ast":null,"code":"var _jsxFileName = \"/Users/FatimaElZahraa/shopify-challenge/my-app/src/Pages/Winner/Winner.tsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { NominatedMovie } from \"../../components/NominatedMovie/NominatedMovie\";\n// import \"./Winner.css\";\n// import { WinnerProps } from \"./Winner.types\";\n\n// export const Winner = ({ movies }: WinnerProps) => {\n//   const handleSelectWinner = () => {\n//     // Randomly select a movie as the winner\n//     const randomIndex = Math.floor(Math.random() * movies.length);\n//     const winnerMovie = movies[randomIndex];\n//     console.log(\"Winner:\", winnerMovie);\n//   };\n\n//   return (\n//     <div className=\"winner-container\">\n//       <h1>Winner</h1>\n//       <button onClick={handleSelectWinner}>Select Winner</button>\n//       <div className=\"nominated-movies-container\">\n//         {movies.map((movie, index) => (\n//           <NominatedMovie\n//             key={movie.id}\n//             id={movie.id}\n//             index={index + 1}\n//             onRemove={() => {}}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n//////////////////////\n\nimport { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { NominatedMovie } from \"../../components/NominatedMovie/NominatedMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Winner = () => {\n  _s();\n  const [winner, setWinner] = useState(null);\n  const {\n    data: nominatedMovies,\n    isLoading\n  } = useQuery(\"nominated-movies\", async () => {\n    const response = await axios.get(\"http://www.omdbapi.com/?i=tt3896198&apikey=3d85689c\");\n    return response.data.Search;\n  });\n  useEffect(() => {\n    if (nominatedMovies && nominatedMovies.length > 0) {\n      const randomIndex = Math.floor(Math.random() * nominatedMovies.length);\n      setWinner(nominatedMovies[randomIndex]);\n    }\n  }, [nominatedMovies]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading winner...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Winner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NominatedMovie, {\n        id: winner.imdbID,\n        index: 1 // You can set the desired index here\n        ,\n        onRemove: () => {} // You can add a remove handler if needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No nominated movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n//////////////////////////////////\n// import { useEffect, useState } from \"react\";\n// import { useQuery } from \"react-query\";\n// import axios from \"axios\";\n// import { INominatedMovie, NominatedMovieProps } from \"../../components/NominatedMovie/NominatedMovie.types\";\n// import { NominatedMovie } from \"../../components/NominatedMovie/NominatedMovie\";\n\n// export const Winner = () => {\n//   const [winner, setWinner] = useState<INominatedMovie | null>(null);\n//   const { data: nominatedMovies, isLoading } = useQuery<INominatedMovie[]>(\n//     \"nominated-movies\",\n//     async () => {\n//       const response = await axios.get(\n//         \"http://www.omdbapi.com/?s=YOUR_SEARCH_TERM&apikey=3d85689c\" // Replace YOUR_SEARCH_TERM with your specific search term\n//       );\n//       return response.data.Search;\n//     }\n//   );\n\n//   useEffect(() => {\n//     if (nominatedMovies && nominatedMovies.length > 0) {\n//       const randomIndex = Math.floor(Math.random() * nominatedMovies.length);\n//       setWinner(nominatedMovies[randomIndex]);\n//     }\n//   }, [nominatedMovies]);\n\n//   return isLoading ? (\n//     <p>Loading winner...</p>\n//   ) : (\n//     <>\n//       {winner ? (\n//         <div>\n//           <h1>Winner</h1>\n//           <NominatedMovie\n//             id={winner.imdbID}\n//             index={1} // You can set the desired index here\n//             onRemove={() => {}} // You can add a remove handler if needed\n//           />\n//         </div>\n//       ) : (\n//         <p>No nominated movies found.</p>\n//       )}\n//     </>\n//   );\n// };\n_s(Winner, \"HvaT7yejY73c9DRj5tWfxPvh+W4=\", false, function () {\n  return [useQuery];\n});\n_c = Winner;\nvar _c;\n$RefreshReg$(_c, \"Winner\");","map":{"version":3,"names":["useEffect","useState","useQuery","axios","NominatedMovie","jsxDEV","_jsxDEV","Fragment","_Fragment","Winner","_s","winner","setWinner","data","nominatedMovies","isLoading","response","get","Search","length","randomIndex","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","id","imdbID","index","onRemove","_c","$RefreshReg$"],"sources":["/Users/FatimaElZahraa/shopify-challenge/my-app/src/Pages/Winner/Winner.tsx"],"sourcesContent":["// import React from \"react\";\n// import { NominatedMovie } from \"../../components/NominatedMovie/NominatedMovie\";\n// import \"./Winner.css\";\n// import { WinnerProps } from \"./Winner.types\";\n\n// export const Winner = ({ movies }: WinnerProps) => {\n//   const handleSelectWinner = () => {\n//     // Randomly select a movie as the winner\n//     const randomIndex = Math.floor(Math.random() * movies.length);\n//     const winnerMovie = movies[randomIndex];\n//     console.log(\"Winner:\", winnerMovie);\n//   };\n\n//   return (\n//     <div className=\"winner-container\">\n//       <h1>Winner</h1>\n//       <button onClick={handleSelectWinner}>Select Winner</button>\n//       <div className=\"nominated-movies-container\">\n//         {movies.map((movie, index) => (\n//           <NominatedMovie\n//             key={movie.id}\n//             id={movie.id}\n//             index={index + 1}\n//             onRemove={() => {}}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n\n\n\n//////////////////////\n\nimport { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { INominatedMovie, NominatedMovieProps } from \"../../components/NominatedMovie/NominatedMovie.types\";\nimport { NominatedMovie } from \"../../components/NominatedMovie/NominatedMovie\";\nexport const Winner = () => {\n  const [winner, setWinner] = useState<INominatedMovie | null>(null);\n  const { data: nominatedMovies, isLoading } = useQuery<INominatedMovie[]>(\n    \"nominated-movies\",\n    async () => {\n      const response = await axios.get(\n        \"http://www.omdbapi.com/?i=tt3896198&apikey=3d85689c\"\n      );\n      return response.data.Search;\n    }\n  );\n\n  useEffect(() => {\n    if (nominatedMovies && nominatedMovies.length > 0) {\n      const randomIndex = Math.floor(Math.random() * nominatedMovies.length);\n      setWinner(nominatedMovies[randomIndex]);\n    }\n  }, [nominatedMovies]);\n\n  return isLoading ? (\n    <p>Loading winner...</p>\n  ) : (\n    <>\n      {winner ? (\n        <div>\n          <h1>Winner</h1>\n          <NominatedMovie\n            id={winner.imdbID}\n            index={1} // You can set the desired index here\n            onRemove={() => {}} // You can add a remove handler if needed\n          />\n        </div>\n      ) : (\n        <p>No nominated movies found.</p>\n      )}\n    </>\n  );\n};\n\n//////////////////////////////////\n// import { useEffect, useState } from \"react\";\n// import { useQuery } from \"react-query\";\n// import axios from \"axios\";\n// import { INominatedMovie, NominatedMovieProps } from \"../../components/NominatedMovie/NominatedMovie.types\";\n// import { NominatedMovie } from \"../../components/NominatedMovie/NominatedMovie\";\n\n// export const Winner = () => {\n//   const [winner, setWinner] = useState<INominatedMovie | null>(null);\n//   const { data: nominatedMovies, isLoading } = useQuery<INominatedMovie[]>(\n//     \"nominated-movies\",\n//     async () => {\n//       const response = await axios.get(\n//         \"http://www.omdbapi.com/?s=YOUR_SEARCH_TERM&apikey=3d85689c\" // Replace YOUR_SEARCH_TERM with your specific search term\n//       );\n//       return response.data.Search;\n//     }\n//   );\n\n//   useEffect(() => {\n//     if (nominatedMovies && nominatedMovies.length > 0) {\n//       const randomIndex = Math.floor(Math.random() * nominatedMovies.length);\n//       setWinner(nominatedMovies[randomIndex]);\n//     }\n//   }, [nominatedMovies]);\n\n//   return isLoading ? (\n//     <p>Loading winner...</p>\n//   ) : (\n//     <>\n//       {winner ? (\n//         <div>\n//           <h1>Winner</h1>\n//           <NominatedMovie\n//             id={winner.imdbID}\n//             index={1} // You can set the desired index here\n//             onRemove={() => {}} // You can add a remove handler if needed\n//           />\n//         </div>\n//       ) : (\n//         <p>No nominated movies found.</p>\n//       )}\n//     </>\n//   );\n// };\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,QAAQ,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChF,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAyB,IAAI,CAAC;EAClE,MAAM;IAAEY,IAAI,EAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGb,QAAQ,CACnD,kBAAkB,EAClB,YAAY;IACV,MAAMc,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC9B,qDACF,CAAC;IACD,OAAOD,QAAQ,CAACH,IAAI,CAACK,MAAM;EAC7B,CACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,IAAIc,eAAe,IAAIA,eAAe,CAACK,MAAM,GAAG,CAAC,EAAE;MACjD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,eAAe,CAACK,MAAM,CAAC;MACtEP,SAAS,CAACE,eAAe,CAACM,WAAW,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,CAACN,eAAe,CAAC,CAAC;EAErB,OAAOC,SAAS,gBACdT,OAAA;IAAAkB,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,gBAExBtB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACGb,MAAM,gBACLL,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACftB,OAAA,CAACF,cAAc;QACbyB,EAAE,EAAElB,MAAM,CAACmB,MAAO;QAClBC,KAAK,EAAE,CAAE,CAAC;QAAA;QACVC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENtB,OAAA;MAAAkB,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjC,gBACD,CACH;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAlB,EAAA,CAnFaD,MAAM;EAAA,QAE4BP,QAAQ;AAAA;AAAA+B,EAAA,GAF1CxB,MAAM;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}